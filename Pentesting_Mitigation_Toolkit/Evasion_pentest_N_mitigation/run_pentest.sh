#!/bin/bash
# Run Evasion Attack Penetration Testing Script
# Based on the CyBOK Security and Privacy of AI Knowledge Guide

# Create output directory if it doesn't exist
OUTPUT_DIR="pentest_results"
mkdir -p $OUTPUT_DIR

# Check if we have a model file, otherwise download a pre-trained MNIST model
MODEL_PATH="mnist_model.h5"
if [ ! -f "$MODEL_PATH" ]; then
    echo "Pre-trained model not found. Downloading a simple model..."
    # This is a placeholder. In a real script, you would download a pre-trained model
    # or train one first
    python -c "
import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense, Dropout

# Load MNIST dataset
(x_train, y_train), (x_test, y_test) = tf.keras.datasets.mnist.load_data()

# Preprocess data
x_train = x_train.astype('float32') / 255.0
x_test = x_test.astype('float32') / 255.0
x_train = x_train.reshape(-1, 28, 28, 1)
x_test = x_test.reshape(-1, 28, 28, 1)
y_train = tf.keras.utils.to_categorical(y_train, 10)
y_test = tf.keras.utils.to_categorical(y_test, 10)

# Create a simple CNN model
model = Sequential([
    Conv2D(32, (3, 3), activation='relu', input_shape=(28, 28, 1)),
    MaxPooling2D((2, 2)),
    Conv2D(64, (3, 3), activation='relu'),
    MaxPooling2D((2, 2)),
    Flatten(),
    Dense(128, activation='relu'),
    Dropout(0.2),
    Dense(10, activation='softmax')
])

# Compile the model
model.compile(
    optimizer='adam',
    loss='categorical_crossentropy',
    metrics=['accuracy']
)

# Train the model (quick training for demo)
model.fit(
    x_train, y_train,
    batch_size=128,
    epochs=2,  # Just 2 epochs for quick training
    validation_data=(x_test, y_test),
    verbose=1
)

# Save the model
model.save('$MODEL_PATH')
print(f'Model saved to {MODEL_PATH}')
"
fi

# Run the penetration testing tool
echo "Running evasion attack penetration testing..."
python evasion_attack_pentest.py \
    --model-path $MODEL_PATH \
    --output-dir $OUTPUT_DIR \
    --fgsm-epsilon 0.1 \
    --pgd-epsilon 0.1 \
    --pgd-alpha 0.01 \
    --pgd-iterations 40 \
    --skip-cw  # Skip C&W for faster execution (remove this flag if you want to run C&W)

echo "Penetration testing completed. Results saved to $OUTPUT_DIR"
echo "Open $OUTPUT_DIR/security_assessment_report.html to view the report"
